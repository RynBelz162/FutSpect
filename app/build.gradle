apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-parcelize'

apply plugin: 'kotlin-kapt'

apply plugin: 'androidx.navigation.safeargs.kotlin'

apply plugin: 'dagger.hilt.android.plugin'


android {
    compileSdkVersion 30
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.belzsoftware.futspect"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
            def futspectFbApiKey = properties.getProperty("Futspect_FbApiKey", "")
            buildConfigField 'String', "FbApiKey", futspectFbApiKey
            resValue 'string', "fb_api_key", futspectFbApiKey
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    }
    sourceSets { main { java.srcDirs = ['src/main/java'] } }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Desugaring
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugaringVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

    // UI
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"

    // Groupie
    implementation "com.xwray:groupie:$groupieVersion"
    implementation "com.xwray:groupie-kotlin-android-extensions:$groupieVersion"
    implementation "com.xwray:groupie-viewbinding:$groupieVersion"

    // Architecture Components
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$liveDataVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // Ok Http
    implementation "com.squareup.okhttp3:okhttp:$okhttp3Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    implementation "com.squareup.moshi:moshi-adapters:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    // Dagger hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // Hilt View Model extensions
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltJetpackVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltJetpackVersion"

    // Preference
    implementation "androidx.preference:preference-ktx:$preferenceVersion"

    // Coil
    implementation "io.coil-kt:coil:$coilVersion"
    implementation "io.coil-kt:coil-svg:$coilVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    // Local unit tests
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptTest "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // Instrumentation tests
    androidTestImplementation "androidx.test:core:$androidTestCoreVersion"
    androidTestImplementation "androidx.test:runner:$androidTestRunnerVersion"
    androidTestImplementation "androidx.test:rules:$androidTestRulesVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJUnitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation  "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$hiltJetpackVersion"
}

kapt {
    correctErrorTypes true
}